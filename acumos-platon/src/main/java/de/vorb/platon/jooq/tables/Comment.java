/*
 * This file is generated by jOOQ.
*/
package de.vorb.platon.jooq.tables;


import de.vorb.platon.jooq.AcumosComment;
import de.vorb.platon.jooq.Keys;
import de.vorb.platon.jooq.tables.records.CommentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Comment extends TableImpl<CommentRecord> {

    private static final long serialVersionUID = 1103823827;

    /**
     * The reference instance of <code>ACUMOS_COMMENT.COMMENT</code>
     */
    public static final Comment COMMENT = new Comment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommentRecord> getRecordType() {
        return CommentRecord.class;
    }

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.ID</code>.
     */
    public final TableField<CommentRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR ACUMOS_COMMENT.SYSTEM_SEQUENCE_ABB044ED_729F_4888_8F7C_38B18187E707)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.THREAD_ID</code>.
     */
    public final TableField<CommentRecord, Long> THREAD_ID = createField("THREAD_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.PARENT_ID</code>.
     */
    public final TableField<CommentRecord, Long> PARENT_ID = createField("PARENT_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.CREATION_DATE</code>.
     */
    public final TableField<CommentRecord, Timestamp> CREATION_DATE = createField("CREATION_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.LAST_MODIFICATION_DATE</code>.
     */
    public final TableField<CommentRecord, Timestamp> LAST_MODIFICATION_DATE = createField("LAST_MODIFICATION_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.STATUS</code>.
     */
    public final TableField<CommentRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.TEXT</code>.
     */
    public final TableField<CommentRecord, String> TEXT = createField("TEXT", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.AUTHOR</code>.
     */
    public final TableField<CommentRecord, String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.NAME</code>.
     */
    public final TableField<CommentRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.EMAIL_HASH</code>.
     */
    public final TableField<CommentRecord, String> EMAIL_HASH = createField("EMAIL_HASH", org.jooq.impl.SQLDataType.CHAR.length(32), this, "");

    /**
     * The column <code>ACUMOS_COMMENT.COMMENT.URL</code>.
     */
    public final TableField<CommentRecord, String> URL = createField("URL", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * Create a <code>ACUMOS_COMMENT.COMMENT</code> table reference
     */
    public Comment() {
        this("COMMENT", null);
    }

    /**
     * Create an aliased <code>ACUMOS_COMMENT.COMMENT</code> table reference
     */
    public Comment(String alias) {
        this(alias, COMMENT);
    }

    private Comment(String alias, Table<CommentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Comment(String alias, Table<CommentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AcumosComment.ACUMOS_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CommentRecord, Long> getIdentity() {
        return Keys.IDENTITY_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CommentRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CommentRecord>> getKeys() {
        return Arrays.<UniqueKey<CommentRecord>>asList(Keys.CONSTRAINT_A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CommentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CommentRecord, ?>>asList(Keys.CONSTRAINT_AB, Keys.CONSTRAINT_ABD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Comment as(String alias) {
        return new Comment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Comment rename(String name) {
        return new Comment(name, null);
    }
}
