/*
 * This file is generated by jOOQ.
*/
package de.vorb.platon.jooq;


import de.vorb.platon.jooq.tables.Comment;
import de.vorb.platon.jooq.tables.Property;
import de.vorb.platon.jooq.tables.Thread;
import de.vorb.platon.jooq.tables.records.CommentRecord;
import de.vorb.platon.jooq.tables.records.PropertyRecord;
import de.vorb.platon.jooq.tables.records.ThreadRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>ACUMOS_COMMENT</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CommentRecord, Long> IDENTITY_COMMENT = Identities0.IDENTITY_COMMENT;
    public static final Identity<ThreadRecord, Long> IDENTITY_THREAD = Identities0.IDENTITY_THREAD;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CommentRecord> CONSTRAINT_A = UniqueKeys0.CONSTRAINT_A;
    public static final UniqueKey<PropertyRecord> CONSTRAINT_E = UniqueKeys0.CONSTRAINT_E;
    public static final UniqueKey<ThreadRecord> CONSTRAINT_D = UniqueKeys0.CONSTRAINT_D;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CommentRecord, ThreadRecord> CONSTRAINT_AB = ForeignKeys0.CONSTRAINT_AB;
    public static final ForeignKey<CommentRecord, CommentRecord> CONSTRAINT_ABD = ForeignKeys0.CONSTRAINT_ABD;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<CommentRecord, Long> IDENTITY_COMMENT = createIdentity(Comment.COMMENT, Comment.COMMENT.ID);
        public static Identity<ThreadRecord, Long> IDENTITY_THREAD = createIdentity(Thread.THREAD, Thread.THREAD.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CommentRecord> CONSTRAINT_A = createUniqueKey(Comment.COMMENT, "CONSTRAINT_A", Comment.COMMENT.ID);
        public static final UniqueKey<PropertyRecord> CONSTRAINT_E = createUniqueKey(Property.PROPERTY, "CONSTRAINT_E", Property.PROPERTY._KEY);
        public static final UniqueKey<ThreadRecord> CONSTRAINT_D = createUniqueKey(Thread.THREAD, "CONSTRAINT_D", Thread.THREAD.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<CommentRecord, ThreadRecord> CONSTRAINT_AB = createForeignKey(de.vorb.platon.jooq.Keys.CONSTRAINT_D, Comment.COMMENT, "CONSTRAINT_AB", Comment.COMMENT.THREAD_ID);
        public static final ForeignKey<CommentRecord, CommentRecord> CONSTRAINT_ABD = createForeignKey(de.vorb.platon.jooq.Keys.CONSTRAINT_A, Comment.COMMENT, "CONSTRAINT_ABD", Comment.COMMENT.PARENT_ID);
    }
}
