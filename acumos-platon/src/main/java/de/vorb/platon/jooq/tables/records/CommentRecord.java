/*
 * This file is generated by jOOQ.
*/
package de.vorb.platon.jooq.tables.records;


import de.vorb.platon.jooq.tables.Comment;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record11<Long, Long, Long, Timestamp, Timestamp, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1397161267;

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.ID</code>.
     */
    public CommentRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.THREAD_ID</code>.
     */
    public CommentRecord setThreadId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.THREAD_ID</code>.
     */
    @NotNull
    public Long getThreadId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.PARENT_ID</code>.
     */
    public CommentRecord setParentId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.PARENT_ID</code>.
     */
    public Long getParentId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.CREATION_DATE</code>.
     */
    public CommentRecord setCreationDate(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.CREATION_DATE</code>.
     */
    @NotNull
    public Timestamp getCreationDate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.LAST_MODIFICATION_DATE</code>.
     */
    public CommentRecord setLastModificationDate(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.LAST_MODIFICATION_DATE</code>.
     */
    @NotNull
    public Timestamp getLastModificationDate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.STATUS</code>.
     */
    public CommentRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.STATUS</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.TEXT</code>.
     */
    public CommentRecord setText(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.TEXT</code>.
     */
    @NotNull
    @Size(max = 2147483647)
    public String getText() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.AUTHOR</code>.
     */
    public CommentRecord setAuthor(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.AUTHOR</code>.
     */
    @Size(max = 128)
    public String getAuthor() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.NAME</code>.
     */
    public CommentRecord setName(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.NAME</code>.
     */
    @Size(max = 128)
    public String getName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.EMAIL_HASH</code>.
     */
    public CommentRecord setEmailHash(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.EMAIL_HASH</code>.
     */
    @Size(max = 32)
    public String getEmailHash() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ACUMOS_COMMENT.COMMENT.URL</code>.
     */
    public CommentRecord setUrl(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ACUMOS_COMMENT.COMMENT.URL</code>.
     */
    @Size(max = 256)
    public String getUrl() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, Long, Timestamp, Timestamp, String, String, String, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, Long, Timestamp, Timestamp, String, String, String, String, String, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Comment.COMMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Comment.COMMENT.THREAD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Comment.COMMENT.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Comment.COMMENT.CREATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Comment.COMMENT.LAST_MODIFICATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Comment.COMMENT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Comment.COMMENT.TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Comment.COMMENT.AUTHOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Comment.COMMENT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Comment.COMMENT.EMAIL_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Comment.COMMENT.URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getThreadId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastModificationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getEmailHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value2(Long value) {
        setThreadId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value3(Long value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value4(Timestamp value) {
        setCreationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value5(Timestamp value) {
        setLastModificationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value6(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value7(String value) {
        setText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value8(String value) {
        setAuthor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value9(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value10(String value) {
        setEmailHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value11(String value) {
        setUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord values(Long value1, Long value2, Long value3, Timestamp value4, Timestamp value5, String value6, String value7, String value8, String value9, String value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Long id, Long threadId, Long parentId, Timestamp creationDate, Timestamp lastModificationDate, String status, String text, String author, String name, String emailHash, String url) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, threadId);
        set(2, parentId);
        set(3, creationDate);
        set(4, lastModificationDate);
        set(5, status);
        set(6, text);
        set(7, author);
        set(8, name);
        set(9, emailHash);
        set(10, url);
    }
}
