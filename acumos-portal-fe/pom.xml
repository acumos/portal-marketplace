<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.acumos.portal-marketplace</groupId>
	<artifactId>acumos-portal-fe</artifactId>
	<version>1.15.36-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Acumos Portal frontend server</name>
	<description>Acumos Portal AngularJS Front End</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<!-- silence warning about parent relative path -->
		<relativePath />
	</parent>
 
	<properties>
		<encoding>UTF-8</encoding>
		<!-- Stand-alone RESTFul application -->
		<start-class>org.acumos.portal.fe.AcumosPortalApplication</start-class>
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<eelf.version>1.0.0</eelf.version>
		<!-- tests require database to be running -->
		<skipTests>false</skipTests>
		<!-- LF Docker coordinates; pull is a proxy for external -->
		<docker.pull.registry>nexus3.acumos.org:10001</docker.pull.registry>
		<!-- Supplied by Jenkins -->
		<docker.push.registry>${env.NEXUS3_PUSH_REGISTRY}</docker.push.registry>
	</properties>
	<!-- All dependencies are public, no extra repositories needed. -->
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<!-- Spring chooses <version>${slf4j.version}</version> -->
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<!-- Spring chooses <version>${logback.version}</version> -->
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<!-- Spring chooses <version>${logback.version}</version> -->
		</dependency>
		<dependency>
			<groupId>com.att.eelf</groupId>
			<artifactId>eelf-core</artifactId>
			<version>${eelf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- spring sets the version -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- spring sets the version -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<!-- spring sets the version -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
			<version>1.3.1.RELEASE</version>
		</dependency>
			<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!-- Spring sets the <version>4.11</version> -->
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- Require Java 1.8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Skip the deployment step, this makes jenkins config easy -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceDirectory>src/main/webapp/</warSourceDirectory>
					<archive>
						<manifestEntries>
							<Build-Number>${project.version}.${build.number}</Build-Number>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
					<fork>true</fork>
					<addResources>true</addResources>
					<goals>
						<goal>repackage</goal>
					</goals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.14</version>
				<configuration>
					<licenseName>acumos</licenseName>
					<licenseResolver>${project.baseUri}/src/license</licenseResolver>
					<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
					<processStartTag>===============LICENSE_START=======================================================</processStartTag>
					<processEndTag>===============LICENSE_END=========================================================</processEndTag>
					<sectionDelimiter>===================================================================================</sectionDelimiter>
					<inceptionYear>2017</inceptionYear>
					<organizationName><![CDATA[AT&T Intellectual Property & Tech Mahindra. All rights reserved.]]></organizationName>
					<projectName>Acumos</projectName>
					<canUpdateCopyright>true</canUpdateCopyright>
					<canUpdateDescription>true</canUpdateDescription>
					<canUpdateLicense>true</canUpdateLicense>
					<emptyLineAfterHeader>true</emptyLineAfterHeader>
					<includes>
						<include>**/*.java</include>
						<!-- <include>**/*.js</include> -->
						<!-- <include>**/*.ts</include> -->
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.21.0</version>
				<configuration>
					<verbose>true</verbose>
					docker runs on the LF build minion so the default value is ok
					LF <dockerHost>unix:///var/run/docker.sock</dockerHost> LF
					<pullRegistry>${docker.pull.registry}</pullRegistry>
					<pushRegistry>${docker.push.registry}</pushRegistry>
					LF credentials are not supplied here
					<images>
						<image>
							Specify a tag to avoid default tag "latest"
							<name>acumos-portal-fe:${project.version}</name>
							<build>
								This is the same FROM used in a Dockerfile
								<from>frolvlad/alpine-oraclejdk8:slim</from>
								<tags>
									Add tag with build number
									<tag>${project.version}-b${build.number}</tag>
								</tags>
								<assembly>
									<inline>
										<files>
											<file>
												<source>application.yml.template</source>
												<outputDirectory />
												<destName>application.yml</destName>
											</file>
											<file>
												<source>target/${project.artifactId}-${project.version}.${project.packaging}</source>
												<outputDirectory />
											</file>
										</files>
									</inline>
								</assembly>
								<cmd>
									CDATA prevents Eclipse formatter from breaking line
									<shell><![CDATA[cd /maven; java -Xms512m -Xmx1024m -Djava.security.egd=file:/dev/./urandom -jar ${project.artifactId}-${project.version}.${project.packaging}]]></shell>
								</cmd>
							</build>
						</image>
					</images>
				</configuration>
				build Docker images in install phase, push in deploy phase
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->
			
<plugin>
<groupId>com.github.searls</groupId>
<artifactId>jasmine-maven-plugin</artifactId>
<version>2.2</version>
<executions>
<execution>
<goals>
<goal>bdd</goal>
</goals>
</execution>
</executions>
<configuration>
<serverPort>8235</serverPort> 
<preloadSources>
<source>${project.basedir}\src\main\webapp\app\resources\jquery.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\bootstrap.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\jquery.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-animate.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-aria.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-material.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-messages.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-ui-router.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-material-icons.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ui-bootstrap-tpls.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-mocks.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ui-carousel.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\satellizer.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-jwt.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ng-infinite-scroll.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ngStorage.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ng-tags-input.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-sanitize.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\imageupload.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-sanitize.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ng-quill.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-base64-upload.js</source>
<source>${project.basedir}\src\main\webapp\js\ng-file-upload.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-socialshare.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\rating-stars.min.js</source>
<source>${project.basedir}\src\main\webapp\app\bootstrap-star-rating\js\star-rating.min.js</source>
<source>${project.basedir}\src\main\webapp\app\file-upload\angular-file-upload.js</source>
<!--  js Files -->
<source>${project.basedir}\src\main\webapp\app\app.module.js</source>
<source>${project.basedir}\src\main\webapp\app\userDetail\userDetail.component.js</source>
<source>${project.basedir}\src\main\webapp\app\Admin\admin.module.js</source>
<source>${project.basedir}\src\main\webapp\app\Admin\admin.component.js</source>
<source>${project.basedir}\src\main\webapp\app\header\resetPswd.module.js</source>
<source>${project.basedir}\src\main\webapp\app\header\resetPswd.component.js</source>
<source>${project.basedir}\src\main\webapp\app\modular-resource\modular-resource.module.js</source>
<source>${project.basedir}\src\main\webapp\app\modular-resource\modular-resource.component.js</source>
<source>${project.basedir}\src\main\webapp\app\marketplace-home\home.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\header\sign-in.module.js</source>  
<source>${project.basedir}\src\main\webapp\app\header\sign-in.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\market_place\market-place.component.js</source>
<source>${project.basedir}\src\main\webapp\app\market_place\manage-module.component.js</source>
<source>${project.basedir}\src\main\webapp\app\design-studio\design-studio.module.js</source> 
<source>${project.basedir}\src\main\webapp\app\design-studio\design-studio.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\header\header-nav.module.js</source>	<source>${project.basedir}\src\main\webapp\app\header\header-nav.component.js</source>
<source>${project.basedir}\src\main\webapp\app\model-details\model-details.module.js</source> 
<source>${project.basedir}\src\main\webapp\app\model-details\model-details.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\model-edit\model-edit.module.js</source>
<source>${project.basedir}\src\main\webapp\app\model-edit\model-edit.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\forgotPswd\forgotPswd.component.js</source>
<source>${project.basedir}\src\main\webapp\app\peer-configuration\peer-configuration.component.js</source>
<source>${project.basedir}\src\main\webapp\app\peer-configuration\adminDashboard.module.js</source>	
<source>${project.basedir}\src\main\webapp\app\peer-configuration\adminDashboard.component.js</source>		
<source>${project.basedir}\src\main\webapp\app\forgotPswd\forgotPswd.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\footer\footer.component.js</source>
<source>${project.basedir}\src\main\webapp\app\notification\notification-details.component.js</source>
<source>${project.basedir}\src\main\webapp\app\question-answer\question-answer.component.js</source>
<source>${project.basedir}\src\main\webapp\app\terms-condition\terms-condition.component.js</source>
<source>${project.basedir}\src\main\webapp\app\error-page\error-404.component.js</source>
<source>${project.basedir}\src\main\webapp\app\app-services\sign-in.service.js</source>

               <!-- Spec Files -->
<source>${project.basedir}\src\main\webapp\app\header\sign-inSpec.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\header\resetPswdSpec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\marketplace-home\homeSpec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\admin\admin.spec.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\market_place\manage-module-spec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\market_place\market-place-spec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\userDetail\userDetail-spec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\modular-resource\modular-resource-spec.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\model-details\model-details.spec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\model-edit\model-edit.spec.component.js</source>  
<source>${project.basedir}\src\main\webapp\app\notification\notification-spec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\peer-configuration\peer-configuration.spec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\peer-configuration\adminDashboard.spec.component.js</source>  
</preloadSources>

</configuration>
</plugin>

<plugin>
<groupId>com.github.timurstrekalov</groupId>
<artifactId>saga-maven-plugin</artifactId>
<version>1.5.5</version>
<executions>
<execution>
<phase>verify</phase>
<goals>
<goal>coverage</goal>
</goals>
</execution>
</executions>
<configuration>
<baseDir>http://localhost:8235</baseDir> 
<outputDir>${project.build.directory}/coverage</outputDir>
</configuration>
</plugin>

<plugin>
<groupId>com.github.searls</groupId>
<artifactId>jasmine-maven-plugin</artifactId>
<version>2.2</version>
<executions>
<execution>
<goals>
<goal>bdd</goal>
</goals>
</execution>
</executions>
<configuration>
<serverPort>8235</serverPort> 
<preloadSources>
<source>${project.basedir}\src\main\webapp\app\resources\jquery.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\bootstrap.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\jquery.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-animate.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-aria.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-material.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-messages.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-ui-router.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-material-icons.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ui-bootstrap-tpls.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-mocks.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ui-carousel.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\satellizer.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-jwt.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ng-infinite-scroll.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ngStorage.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ng-tags-input.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-sanitize.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\imageupload.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-sanitize.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\ng-quill.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-base64-upload.js</source>
<source>${project.basedir}\src\main\webapp\js\ng-file-upload.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\angular-socialshare.min.js</source>
<source>${project.basedir}\src\main\webapp\app\resources\rating-stars.min.js</source>
<source>${project.basedir}\src\main\webapp\app\bootstrap-star-rating\js\star-rating.min.js</source>
<source>${project.basedir}\src\main\webapp\app\file-upload\angular-file-upload.js</source>
<!--  js Files -->
<source>${project.basedir}\src\main\webapp\app\app.module.js</source>
<source>${project.basedir}\src\main\webapp\app\userDetail\userDetail.component.js</source>
<source>${project.basedir}\src\main\webapp\app\Admin\admin.module.js</source>
<source>${project.basedir}\src\main\webapp\app\Admin\admin.component.js</source>
<source>${project.basedir}\src\main\webapp\app\header\resetPswd.module.js</source>
<source>${project.basedir}\src\main\webapp\app\header\resetPswd.component.js</source>
<source>${project.basedir}\src\main\webapp\app\modular-resource\modular-resource.module.js</source>
<source>${project.basedir}\src\main\webapp\app\modular-resource\modular-resource.component.js</source>
<source>${project.basedir}\src\main\webapp\app\marketplace-home\home.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\header\sign-in.module.js</source>  
<source>${project.basedir}\src\main\webapp\app\header\sign-in.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\market_place\market-place.component.js</source>
<source>${project.basedir}\src\main\webapp\app\market_place\manage-module.component.js</source>
<source>${project.basedir}\src\main\webapp\app\design-studio\design-studio.module.js</source> 
<source>${project.basedir}\src\main\webapp\app\design-studio\design-studio.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\header\header-nav.module.js</source>	
<source>${project.basedir}\src\main\webapp\app\header\header-nav.component.js</source>
<source>${project.basedir}\src\main\webapp\app\model-details\model-details.module.js</source> 
<source>${project.basedir}\src\main\webapp\app\model-details\model-details.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\model-edit\model-edit.module.js</source>
<source>${project.basedir}\src\main\webapp\app\model-edit\model-edit.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\forgotPswd\forgotPswd.component.js</source>
<source>${project.basedir}\src\main\webapp\app\peer-configuration\peer-configuration.component.js</source>
<source>${project.basedir}\src\main\webapp\app\peer-configuration\adminDashboard.module.js</source>	
<source>${project.basedir}\src\main\webapp\app\peer-configuration\adminDashboard.component.js</source>		
<source>${project.basedir}\src\main\webapp\app\forgotPswd\forgotPswd.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\footer\footer.component.js</source>
<source>${project.basedir}\src\main\webapp\app\notification\notification-details.component.js</source>
<source>${project.basedir}\src\main\webapp\app\question-answer\question-answer.component.js</source>
<source>${project.basedir}\src\main\webapp\app\terms-condition\terms-condition.component.js</source>
<source>${project.basedir}\src\main\webapp\app\error-page\error-404.component.js</source>
<source>${project.basedir}\src\main\webapp\app\app-services\sign-in.service.js</source>

               <!-- Spec Files -->
<source>${project.basedir}\src\main\webapp\app\header\sign-inSpec.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\header\resetPswdSpec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\marketplace-home\homeSpec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\admin\admin.spec.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\market_place\manage-module-spec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\market_place\market-place-spec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\userDetail\userDetail-spec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\modular-resource\modular-resource-spec.component.js</source> 
<source>${project.basedir}\src\main\webapp\app\model-details\model-details.spec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\model-edit\model-edit.spec.component.js</source>  
<source>${project.basedir}\src\main\webapp\app\notification\notification-spec.component.js</source>
<source>${project.basedir}\src\main\webapp\app\peer-configuration\peer-configuration.spec.component.js</source>	
<source>${project.basedir}\src\main\webapp\app\peer-configuration\adminDashboard.spec.component.js</source>  
</preloadSources>

</configuration>
</plugin>
<plugin>
<groupId>com.github.timurstrekalov</groupId>
<artifactId>saga-maven-plugin</artifactId>
<version>1.5.5</version>
<executions>
<execution>
<phase>verify</phase>
<goals>
<goal>coverage</goal>
</goals>
</execution>
</executions>
<configuration>
<baseDir>http://localhost:8235</baseDir> 
<outputDir>${project.build.directory}/coverage</outputDir>
</configuration>
</plugin>

			
			
			
		</plugins>
		
	</build>
	<!-- No distributionManagement section, jars are not deployed -->
</project>
