<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.acumos</groupId>
  <artifactId>acumos-portal-fe</artifactId>
  <version>1.12.7-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>acumos-portal-fe</name>
  <description>Acumos Portal AngularJS Front End</description>
  
  <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
  </parent>
    
  <properties>
		<encoding>UTF-8</encoding>
		<!-- Stand-alone RESTFul application -->
		<start-class>org.acumos.portal.fe.AcumosPortalApplication</start-class>
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<eelf.version>1.0.0</eelf.version>
		<!-- tests require database to be running -->
		<skipTests>true</skipTests>
		<!-- Docker daemon; overridden by Jenkins settings -->
		<docker.host.url>unix:/var/run/docker.sock</docker.host.url>
		<!-- Docker image registry; all overriden by Jenkins settings -->
		<docker.registry.url>set by Jenkins</docker.registry.url>
		<docker.registry.login>set by Jenkins</docker.registry.login>
		<docker.registry.password>set by Jenkins</docker.registry.password>
	</properties>
  <dependencies>
  		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<!-- Spring chooses <version>${slf4j.version}</version> -->
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<!-- Spring chooses <version>${logback.version}</version> -->
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<!-- Spring chooses <version>${logback.version}</version> -->
		</dependency>
		<dependency>
			<groupId>com.att.eelf</groupId>
			<artifactId>eelf-core</artifactId>
			<version>${eelf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-zuul</artifactId>
    <version>1.3.1.RELEASE</version>
</dependency>
	</dependencies>


	<build>
		<plugins>
			<!-- Require Java 1.8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			 <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warSourceDirectory>src/main/webapp/</warSourceDirectory>
                    <archive>
                    	<manifestEntries>
							<Build-Number>${project.version}.${build.number}</Build-Number>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				 <configuration>
                     <executable>true</executable>
                     <fork>true</fork>
                     <addResources>true</addResources>
                     <goals>
						<goal>repackage</goal>
					 </goals>
                 </configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.14</version>
				<configuration>
					<licenseName>acumos</licenseName>
					<licenseResolver>${project.baseUri}/src/license</licenseResolver>
					<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
					<processStartTag>===============LICENSE_START=======================================================</processStartTag>
					<processEndTag>===============LICENSE_END=========================================================</processEndTag>
					<sectionDelimiter>===================================================================================</sectionDelimiter>
					<inceptionYear>2017</inceptionYear>
					<organizationName><![CDATA[AT&T Intellectual Property & Tech Mahindra. All rights reserved.]]></organizationName>
					<projectName>Acumos</projectName>
					<canUpdateCopyright>true</canUpdateCopyright>
					<canUpdateDescription>true</canUpdateDescription>
					<canUpdateLicense>true</canUpdateLicense>
					<emptyLineAfterHeader>true</emptyLineAfterHeader>
					<includes>
	                      <include>**/*.java</include>
<!-- 	                      <include>**/*.js</include> -->
<!-- 	                      <include>**/*.ts</include> -->
	                 </includes>
		        </configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.21.0</version>
				<configuration>
					<verbose>true</verbose>
					<dockerHost>${docker.host.url}</dockerHost>
					<registry>${docker.registry.url}</registry>
					<authConfig>
						<username>${docker.registry.login}</username>
						<password>${docker.registry.password}</password>
					</authConfig>
					<images>
						<image>
							<name>acumos-portal-fe:${project.version}</name>
							<build>
								<!-- This is the same FROM used in a Dockerfile -->
								<from>frolvlad/alpine-oraclejdk8:slim</from>
								<assembly>
									<inline>
										<files>
											<file>
												<source>application.yml.template</source>
												<outputDirectory />
												<destName>application.yml</destName>
											</file>
											<file>
												<source>target/${project.artifactId}-${project.version}.${project.packaging}</source>
												<outputDirectory />
											</file>
										</files>
									</inline>
								</assembly>
								<cmd>
									<shell>cd /maven; java -Djava.security.egd=file:/dev/./urandom -jar ${project.artifactId}-${project.version}.${project.packaging}</shell>
								</cmd>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
						<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<distributionManagement>
		<snapshotRepository>
			<!-- must match ID in Jenkins settings -->
			<id>acumos-nexus</id>
			<name>acumos-repository-snapshots</name>
			<url>${acumos.nexus.url}/${acumos.nexus.snapshot.path}</url>
		</snapshotRepository>
		<repository>
			<!-- must match ID in Jenkins settings -->
			<id>acumos-nexus</id>
			<name>acumos-repository-releases</name>
			<url>${acumos.nexus.url}/${acumos.nexus.release.path}</url>
		</repository>
	</distributionManagement>
</project>